(window.webpackJsonp=window.webpackJsonp||[]).push([[46],{594:function(s,t,a){"use strict";a.r(t);var n=a(5),r=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h2",{attrs:{id:"npx"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#npx"}},[s._v("#")]),s._v(" npx")]),s._v(" "),a("h3",{attrs:{id:"基本介绍"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基本介绍"}},[s._v("#")]),s._v(" 基本介绍")]),s._v(" "),a("ul",[a("li",[s._v("npm 5.2后发布的一个命令，用以执行 npm 依赖包的二进制文件")]),s._v(" "),a("li",[s._v("使用 npx 可以直接执行本地已安装的依赖包命令，而不用在 script 脚本中写入命令")])]),s._v(" "),a("p",[s._v("一般来说，我们运行命令方式有以下几种：")]),s._v(" "),a("ol",[a("li",[s._v("使用 package.json 的 script 脚本")])]),s._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// package.json  ")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"scripts"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("  \n  "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"findmocha"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"mocha --version"')]),s._v("  \n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("  \n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 然后在命令行运行：  ")]),s._v("\nnpm run findmocha  \n")])])]),a("ol",{attrs:{start:"2"}},[a("li",[s._v("在命令行中直接找到模块的二进制文件运行")]),s._v(" "),a("li",[s._v("全局安装模块")])]),s._v(" "),a("p",[s._v("而使用 npx ，我们可以直接在命令行执行我们需要的命令：")]),s._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[s._v("npm i "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("D")]),s._v(" mocha  \nnpx mocha "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),s._v("version  \n")])])]),a("h3",{attrs:{id:"npx-原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#npx-原理"}},[s._v("#")]),s._v(" npx 原理")]),s._v(" "),a("p",[s._v("执行 npx 命令时，背后流程如下：")]),s._v(" "),a("ol",[a("li",[s._v("去 node_modules/.bin 路径下检查 npx 后的命令是否存在，找到之后执行；")]),s._v(" "),a("li",[s._v("找不到，就去环境变量 $PATH 里面，检查 npx 后的命令是否存在，找到之后执行；")]),s._v(" "),a("li",[s._v("若还是找不到，则自动下载一个临时的依赖包最新版本在一个临时目录，然后再运行，运行完成之后删除，不污染全局环境")])]),s._v(" "),a("h3",{attrs:{id:"使用场景"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用场景"}},[s._v("#")]),s._v(" 使用场景")]),s._v(" "),a("ul",[a("li",[s._v("使用 npx 执行本地命令")]),s._v(" "),a("li",[s._v("只需执行一次的命令，但是却需要全局安装，这时使用 npx 运行完自动删除")]),s._v(" "),a("li",[s._v("当运行的命令不兼容当前 nodejs 版本时，使用 npx 切换版本，运行命令，同样执行完删除")]),s._v(" "),a("li",[s._v("使用 npx 开启一个静态服务器： npx http-server")])]),s._v(" "),a("h3",{attrs:{id:"npx-使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#npx-使用"}},[s._v("#")]),s._v(" npx 使用")]),s._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 安装  ")]),s._v("\nnpm install "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("g npx  \n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// -p 参数：用于指定 npx 所要安装的模块  ")]),s._v("\nnpx "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("p node@"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("6")]),s._v(" node "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("v  \n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// --no-install 参数：强制使用本地模块，不下载远程模块  ")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// --ignore-existing 参数：忽略本地的同名模块，强制安装使用远程模块  ")]),s._v("\n")])])])])}),[],!1,null,null,null);t.default=r.exports}}]);