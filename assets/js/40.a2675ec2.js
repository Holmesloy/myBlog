(window.webpackJsonp=window.webpackJsonp||[]).push([[40],{583:function(t,a,s){"use strict";s.r(a);var e=s(5),r=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("hr"),t._v(" "),s("p",[t._v("title: Git，再学亿遍"),s("br"),t._v("\ndate: 2020-12-10"),s("br"),t._v("\ncategories:")]),t._v(" "),s("ul",[s("li",[t._v("编程"),s("br"),t._v("\ntags:")]),t._v(" "),s("li",[t._v("tools")])]),t._v(" "),s("hr"),t._v(" "),s("h2",{attrs:{id:"git设置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git设置"}},[t._v("#")]),t._v(" git设置")]),t._v(" "),s("ul",[s("li",[t._v("下载git后，使用  生成git公钥和私钥，将公钥添加到github，gitlab等，即可识别出你的身份")]),t._v(" "),s("li",[t._v("设置全局name和email："),s("code",[t._v('git config --global user.name/user.email "xxx"')])])]),t._v(" "),s("h2",{attrs:{id:"常用git命令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#常用git命令"}},[t._v("#")]),t._v(" 常用git命令")]),t._v(" "),s("ul",[s("li",[t._v("git init ： 将一个文件夹初始化为git文件夹")]),t._v(" "),s("li",[t._v("git add.  ：添加新文件或者修改的所有文件添加到git")]),t._v(" "),s("li",[t._v("git checkout xxx ：xxx文件撤回修改（.是全部修改撤销）")]),t._v(" "),s("li",[t._v('git commit -m ""：提交到本地仓库')]),t._v(" "),s("li",[t._v("git push origin master：推送到远程仓库")]),t._v(" "),s("li",[t._v("git pull origin master：从远程仓库获取代码")]),t._v(" "),s("li",[t._v("git branch dev：添加分支dev")]),t._v(" "),s("li",[t._v("git checkout -b xx / git checkout xx：切换到xx分支上")]),t._v(" "),s("li",[t._v("git merge xxx：合并文件到当前分支")]),t._v(" "),s("li",[t._v("git push origin 分支名 ：将该分支提交到远程仓库")])]),t._v(" "),s("h2",{attrs:{id:"git场景"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git场景"}},[t._v("#")]),t._v(" git场景")]),t._v(" "),s("h2",{attrs:{id:"_1-新建分支开发"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-新建分支开发"}},[t._v("#")]),t._v(" 1. 新建分支开发")]),t._v(" "),s("p",[t._v("新建分支两种方式：")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("远程建好分支，本地直接拉下来"),s("br"),t._v(" "),s("code",[t._v("git checkout -b feature/zxz origin/feature zxz // 远程分支feature/zxz拉到本地")])])]),t._v(" "),s("li",[s("p",[t._v("本地建好分支，推送到远程")])])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("git checkout "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("b feature"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("zxz    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 创建并切换到改分支  ")]),t._v("\ngit push origin feature"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("zxz"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" feature"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("zxz   \n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 推送本地分支feature/zxz（冒号前）到远程origin的分支feature/zxz(冒号后)，若远程没有该分支，可省略冒号后分支，直接推送  ")]),t._v("\n")])])]),s("p",[t._v("新建完成后，可以在gitlab或者github上提交merge request。")]),t._v(" "),s("h2",{attrs:{id:"_2-commit撤回"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-commit撤回"}},[t._v("#")]),t._v(" 2. commit撤回")]),t._v(" "),s("p",[s("code",[t._v("git reset --soft HEAD^")]),t._v("\n只是撤回commit，代码不会丢失")]),t._v(" "),s("h2",{attrs:{id:"_3-将远程分支合并到master"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-将远程分支合并到master"}},[t._v("#")]),t._v(" 3. 将远程分支合并到master**")]),t._v(" "),s("ol",[s("li",[t._v("首先切换到master")]),t._v(" "),s("li",[t._v("然后使用git fetch")]),t._v(" "),s("li",[t._v("git merge 分支名 ：将该分支合并到master")]),t._v(" "),s("li",[t._v("git push origin master：提交到远程分支")])]),t._v(" "),s("p",[t._v("git两个分支互不影响，切换分支后另一分支的修改不会出现在该分支（无论是add后还是commit后）")]),t._v(" "),s("p",[t._v("两个分支修改了同一个文件：发生冲突（conflict）"),s("br"),t._v("\n根据git显示的信息以及自身的需求进行修改，选择接受哪一个或者都接受，若出现错误冲突则要先修改代码")]),t._v(" "),s("p",[t._v("当修改代码时，发现不小心在主分支上修改了，但是这不符合要求，可不能全删除吧，这时候使用："),s("br"),t._v("\ngit stash：将刚修改的内容放入栈中，然后就可以切换到其他分支"),s("br"),t._v("\n然后在该分支使用git stash pop，将修改的内容添加到当前分支上")]),t._v(" "),s("h2",{attrs:{id:"_4-git重命名分支"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-git重命名分支"}},[t._v("#")]),t._v(" 4. git重命名分支")]),t._v(" "),s("p",[s("strong",[t._v("本地分支重命名")]),t._v("\n语法："),s("code",[t._v("git branch -m old new")]),t._v("  将old分支重命名为new\n"),s("strong",[t._v("远程分支重命名")]),t._v("\n远程分支不可直接重命名，只能重新推送本地分支：")]),t._v(" "),s("ul",[s("li",[t._v("将本地分支重命名")]),t._v(" "),s("li",[t._v("将本地分支推送到远程")]),t._v(" "),s("li",[t._v("将远程分支删除\n如将远程的old重命名为new：")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("git branch "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("m old "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("git")]),t._v(" push origin "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("git")]),t._v(" push "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("delete")]),t._v(" origin old\n")])])])])}),[],!1,null,null,null);a.default=r.exports}}]);