(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{533:function(a,t,n){a.exports=n.p+"assets/img/npm-1.7ab26ec9.png"},534:function(a,t,n){a.exports=n.p+"assets/img/npm-2.11b19075.png"},535:function(a,t,n){a.exports=n.p+"assets/img/npm-3.b69b19f0.png"},536:function(a,t,n){a.exports=n.p+"assets/img/npm-4.09fac0e2.png"},537:function(a,t,n){a.exports=n.p+"assets/img/npm-5.2b28eec9.png"},601:function(a,t,n){"use strict";n.r(t);var s=n(5),e=Object(s.a)({},(function(){var a=this,t=a.$createElement,s=a._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h2",{attrs:{id:"包管理器的产生背景"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#包管理器的产生背景"}},[a._v("#")]),a._v(" 包管理器的产生背景")]),a._v(" "),s("p",[a._v("包管理器产生之前，前端工程师通常需要单独下载第三方工具库并手动引入，这就存在以下几个问题：")]),a._v(" "),s("ol",[s("li",[a._v("工具库会经常更新，每次都要重新下载并替换")]),a._v(" "),s("li",[a._v("包引用顺序也必须正确，否则会出现错误")]),a._v(" "),s("li",[a._v("工具库较多时难以维护，不符合大型项目的要求")])]),a._v(" "),s("p",[s("img",{attrs:{src:n(533),alt:"pic"}}),s("br"),a._v("\n如图，BootStrap 依赖于 JQuery ,需要将 BootStrap.js 文件引用放到 JQuery.js 文件之后。")]),a._v(" "),s("p",[a._v("正是由于这些问题，就急需包管理工具去代替人工进行依赖管理。")]),a._v(" "),s("h2",{attrs:{id:"包管理器出场"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#包管理器出场"}},[a._v("#")]),a._v(" 包管理器出场")]),a._v(" "),s("ul",[s("li",[a._v("npm 和 Bower，npm 只能处理 node 包，Bower 可以处理 HTML 和 CSS 等前端静态资源")]),a._v(" "),s("li",[a._v("Bower 版本不匹配问题，CommonJS 和其他模块规范不能很好支持")]),a._v(" "),s("li",[a._v("npm V3:提供了一个扁平化的依赖关系树，拥有针对冲突的模块嵌套、CommonJS 模块支持、以及可以同时用于前端包和 node 包的单一生态系统等特性")])]),a._v(" "),s("p",[a._v("正是由于 npm 功能较为完善，逐渐在社区中火热起来，并继续向前发展。")]),a._v(" "),s("h2",{attrs:{id:"npm-包管理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#npm-包管理"}},[a._v("#")]),a._v(" npm 包管理")]),a._v(" "),s("h3",{attrs:{id:"npm-介绍"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#npm-介绍"}},[a._v("#")]),a._v(" npm 介绍")]),a._v(" "),s("p",[a._v("npm ，是 Node.js 平台的默认包管理工具，通过 npm 可以安装、分发代码，管理项目依赖，随 Node.js 一起安装，npm 的管理思路如下：")]),a._v(" "),s("ol",[s("li",[a._v("建立一个代码仓库，其中存放所有需要被共享的代码")]),a._v(" "),s("li",[a._v("让 jQuery，BootStrap 作者将代码提交到仓库中")]),a._v(" "),s("li",[a._v("当有人需要这些代码时，即可通过 npm 来下载代码，这些代码就被称为包（package）")])]),a._v(" "),s("p",[s("strong",[a._v("npm 的发展")])]),a._v(" "),s("ul",[s("li",[a._v("npm 1/2：只能处理 node 包，且安装策略非扁平化，即安装的一个包中，它所依赖的项目都在该文件夹下")]),a._v(" "),s("li",[a._v("npm3：目录层级从嵌套变到扁平化，解决目录嵌套层级过深问题，但是安装速度依然较慢")]),a._v(" "),s("li",[a._v("npm5：引入 package-lock.json 文件，并自动添加 dependencies，提升安装速度")]),a._v(" "),s("li",[a._v("npm6：加入了缓存，并且又进一步提升了安装速度")])]),a._v(" "),s("h3",{attrs:{id:"npm-install-过程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#npm-install-过程"}},[a._v("#")]),a._v(" npm install 过程")]),a._v(" "),s("p",[s("img",{attrs:{src:n(534),alt:"pic"}})]),a._v(" "),s("ol",[s("li",[a._v("检查配置（.npmrc文件），从 package.json 中读取所有依赖信息，然后与 node_modules 中已经安装的依赖对比")]),a._v(" "),s("li",[a._v("若没有则通过 package-lock.json 获取版本号下载安装，若已存在也会通过 package.lock.json 检查更新，构建依赖树")]),a._v(" "),s("li",[a._v("检查缓存，下载包")]),a._v(" "),s("li",[a._v("解压到 node_modules 文件，并生成 lock 文件")])]),a._v(" "),s("h3",{attrs:{id:"npm-开发文件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#npm-开发文件"}},[a._v("#")]),a._v(" npm 开发文件")]),a._v(" "),s("p",[s("strong",[a._v("package.json")])]),a._v(" "),s("ul",[s("li",[s("code",[a._v("npm init")]),a._v("时生成，记录项目中需要的所有模块，模块名称和大版本信息")]),a._v(" "),s("li",[a._v("npm install 时 node 从中读取所有 dependencies 信息，然后与 node_modules 中模块对比")]),a._v(" "),s("li",[a._v("没有的直接下载，已有的检查更新")]),a._v(" "),s("li",[a._v("只记录安装的模块信息，而模块依赖的其他子模块的信息不会记录")])]),a._v(" "),s("p",[s("strong",[a._v("package-lock.json")])]),a._v(" "),s("ul",[s("li",[a._v("记录模块的详细信息，所有模块的具体版本号，包括主模块和所有依赖子模块")]),a._v(" "),s("li",[a._v("npm install 时从 package.json 中读取模块名称，从 pakage-lock.json 文件中获取版本号")]),a._v(" "),s("li",[a._v("需要上传到 git，确保大家使用的包版本一致")])]),a._v(" "),s("p",[s("strong",[a._v("文件中 ^ 与 ~ 的含义")])]),a._v(" "),s("ul",[s("li",[a._v("更新范围：package.json 中所容纳的版本，"),s("code",[a._v("^")]),a._v("即表示兼容该版本之后的小版本而不更新大版本")]),a._v(" "),s("li",[a._v("如："),s("code",[a._v('"vue": "^2.5.2"')]),a._v("指范围应该 >= 2.52 但 < 3.0.0之间，另外"),s("code",[a._v("^")]),a._v("会忽略版本号开头为0的数字，"),s("code",[a._v("^0.12")]),a._v("表示 >= 0.12 并 < 0.20")]),a._v(" "),s("li",[a._v("~ 表示更新到当前 minor version（即中间那个数字中的最新版本），如 ~1.15.2表示  >= 1.15.2 < 1.16.0")])]),a._v(" "),s("p",[s("strong",[a._v("package.json 中 dependencies 和 devDependencies 区别")])]),a._v(" "),s("ul",[s("li",[a._v("dependencies 是生产环境需要的依赖，如 vue，axios 等，通过"),s("code",[a._v("--save")]),a._v("方式保存其中")]),a._v(" "),s("li",[a._v("devDependencies 是开发环境所需要的依赖如 webpack，babel 等，只存在于开发阶段，打包后不会用到，通过"),s("code",[a._v("--save-dev")]),a._v("保存其中")]),a._v(" "),s("li",[a._v("因此在浏览或者使用其他人项目时我们可以选择性地安装依赖来节省时间")]),a._v(" "),s("li",[s("code",[a._v("npm install")]),a._v("是全部安装，"),s("code",[a._v("npm install --production")]),a._v("则只安装dependencies下的依赖")]),a._v(" "),s("li",[a._v("另，"),s("code",[a._v("-g")]),a._v("是指全局环境安装，所有的项目都可以使用")])]),a._v(" "),s("p",[a._v("前面提到，npm 3 变成了扁平式的依赖结构，解决了很多问题，达到可用的程度。但是，依然有很多痛点，比如安装速度依然较慢，同时无法保证两次安装的版本完全相同，可能出现很多错误。\n另外，它也不支持缓存和离线模式，正是由于这些问题，Facebook 和 Google 共同推行 yarn，旨在打造一个更优秀、完善的包管理工具。")]),a._v(" "),s("h2",{attrs:{id:"yarn"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#yarn"}},[a._v("#")]),a._v(" yarn")]),a._v(" "),s("h3",{attrs:{id:"yarn-介绍"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#yarn-介绍"}},[a._v("#")]),a._v(" yarn 介绍")]),a._v(" "),s("p",[a._v("yarn，由 Facebook 推出的包管理工具，其特点如下：")]),a._v(" "),s("ul",[s("li",[a._v("快 — yarn 充分利用缓存，加载过的包会被放进缓存内，再次加载相同包时会优先读取缓存，另外多个包下载和安装并行")]),a._v(" "),s("li",[a._v("可靠 — 生成 yarn 项目时会生成一个 yarn.lock 文件，用于锁定安装包版本号")]),a._v(" "),s("li",[a._v("安全 — 执行代码前，yarn 会通过算法校验每个安装包的完整性")]),a._v(" "),s("li",[a._v("可迁移 — 同格式的 package.json，npm 项目和 yarn 项目可以无缝切换")])]),a._v(" "),s("h3",{attrs:{id:"pnp-模式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#pnp-模式"}},[a._v("#")]),a._v(" PnP 模式")]),a._v(" "),s("ul",[s("li",[a._v("用于取代 node_modules，生成一个 .pnp.js 文件去告诉 nodejs 包的具体位置，而不是在 node_modules 中寻找依赖")]),a._v(" "),s("li",[a._v("把所有包以 zip 的格式存储，甚至让不同的工程共用同一份依赖文件，减少依赖的体积和加载时间")]),a._v(" "),s("li",[a._v("yarn 1可以使用 pnp，但是 yarn 2默认开启了它")])]),a._v(" "),s("h3",{attrs:{id:"npm-和-yarn-的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#npm-和-yarn-的区别"}},[a._v("#")]),a._v(" npm 和 yarn 的区别")]),a._v(" "),s("p",[s("strong",[a._v("yarn 的优点")])]),a._v(" "),s("ul",[s("li",[a._v("速度快：并行安装 package，并拥有离线模式，即如果之前安装过一个软件包，可从缓存中获取")]),a._v(" "),s("li",[a._v("更简洁的输出：较 npm 的输出信息简洁很多，直接打印出必要的信息")]),a._v(" "),s("li",[a._v("多注册来源处理：所有依赖包，不管被关联引用多少次，只会从一个注册来源安装，防止混乱")]),a._v(" "),s("li",[a._v("更好的语义化：使用 yarn add/remove，比 install/uninstall 更清晰一些")])]),a._v(" "),s("p",[s("strong",[a._v("npm 5 的改进")])]),a._v(" "),s("ul",[s("li",[a._v("默认增加了类似 yarn.lock 的 package-lock.json")]),a._v(" "),s("li",[a._v("文件依赖优化：之前安装时会将文件目录拷贝到 node_modules 中，npm5 使用创建 symlinks（软链接） 的方式实现，不再拷贝")]),a._v(" "),s("li",[a._v("大幅度提升了安装速度，目前在一些场景中可以赶上 yarn")])]),a._v(" "),s("p",[s("strong",[a._v("npm 6 的改进")])]),a._v(" "),s("ul",[s("li",[a._v("加入了缓存，并提高了安全性和性能")])]),a._v(" "),s("p",[s("strong",[a._v("npm 和 yarn 常用命令对比")])]),a._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"left"}},[a._v("npm")]),a._v(" "),s("th",{staticStyle:{"text-align":"left"}},[a._v("yarn")])])]),a._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"left"}},[a._v("npm install")]),a._v(" "),s("td",{staticStyle:{"text-align":"left"}},[a._v("yarn install")])]),a._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[a._v("npm install [package] --save-dev")]),a._v(" "),s("td",{staticStyle:{"text-align":"left"}},[a._v("yarn add [package] -dev")])]),a._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[a._v("npm install [package] -g")]),a._v(" "),s("td",{staticStyle:{"text-align":"left"}},[a._v("yarn global add [package]")])]),a._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[a._v("npm update -g")]),a._v(" "),s("td",{staticStyle:{"text-align":"left"}},[a._v("yarn global upgrade")])]),a._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[a._v("npm uninstall [package]")]),a._v(" "),s("td",{staticStyle:{"text-align":"left"}},[a._v("yarn remove [package]")])])])]),a._v(" "),s("h2",{attrs:{id:"pnpm-performant-npm"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#pnpm-performant-npm"}},[a._v("#")]),a._v(" pnpm（performant npm）")]),a._v(" "),s("h3",{attrs:{id:"pnpm-优点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#pnpm-优点"}},[a._v("#")]),a._v(" pnpm 优点")]),a._v(" "),s("ul",[s("li",[a._v("速度极快")]),a._v(" "),s("li",[a._v("高效利用磁盘空间，基于内容寻址")]),a._v(" "),s("li",[a._v("不会重复安装同一个包")]),a._v(" "),s("li",[a._v("支持monorepo")]),a._v(" "),s("li",[a._v("安全性高：自创了一套依赖管理方式，解决依赖间非法访问的问题")])]),a._v(" "),s("p",[s("img",{attrs:{src:n(535),alt:"pic"}}),a._v("\n如图，黄色的是pnpm，在安装react包时，绝大多数场景下，速度明显优于npm/yarn，有些甚至快2-3倍")]),a._v(" "),s("h3",{attrs:{id:"monorepo-简介"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#monorepo-简介"}},[a._v("#")]),a._v(" monorepo 简介")]),a._v(" "),s("p",[s("img",{attrs:{src:n(536),alt:"pic"}})]),a._v(" "),s("ul",[s("li",[a._v("传统模式中每个项目对应一个单独的仓库来分散管理")]),a._v(" "),s("li",[a._v("monorepo 指多个项目放在一个仓库中")]),a._v(" "),s("li",[a._v("优点：代码复用、无需切换开发环境、方便团队协作等")])]),a._v(" "),s("h3",{attrs:{id:"node-modules-依赖管理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#node-modules-依赖管理"}},[a._v("#")]),a._v(" node_modules 依赖管理")]),a._v(" "),s("p",[s("strong",[a._v("npm1 和 npm2 时的结构：")])]),a._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[a._v("node_modules\n└─ foo\n   ├─ index"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("js\n   ├─ "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("package")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("json\n   └─ node_modules\n      └─ bar\n         ├─ index"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("js\n         └─ "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("package")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("json\n")])])]),s("p",[s("strong",[a._v("后续的扁平化依赖结构：")])]),a._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[a._v("node_modules\n├─ foo\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v("  ├─ index"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("js\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v("  └─ "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("package")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("json\n└─ bar\n   ├─ index"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("js\n   └─ "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("package")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("json\n")])])]),s("ul",[s("li",[a._v("不再有很深层次的嵌套关系")]),a._v(" "),s("li",[a._v("找到相同版本包时就不会重复安装，且依赖层级不会太深")]),a._v(" "),s("li",[a._v("扁平化之后，依赖结构会存在不确定性，因此需要lock文件")])]),a._v(" "),s("p",[s("strong",[a._v("pnpm 依赖结构")])]),a._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[a._v("▾ node_modules\n  ▾ "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("pnpm\n    ▸ accepts@"),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1.3")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v(".7")]),a._v("\n    ▸ array"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v("flatten@"),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1.1")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v(".1")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("...")]),a._v("\n    ▾ express@"),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("4.17")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v(".1")]),a._v("\n      ▾ node_modules\n        ▸ accepts  "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),a._v("accepts@"),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1.3")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v(".7")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),a._v("node_modules"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),a._v("accepts\n        ▸ array"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v("flatten "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),a._v("array"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v("flatten@"),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1.1")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v(".1")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),a._v("node_modules"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),a._v("array"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v("flatten\n        "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("...")]),a._v("\n        ▾ express\n          ▸ lib\n            History"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("md\n            index"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("js\n            "),s("span",{pre:!0,attrs:{class:"token constant"}},[a._v("LICENSE")]),a._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("package")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("json\n            Readme"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("md\n")])])]),s("ul",[s("li",[a._v("扁平 + 嵌套软链接结构：将包本身和依赖放在同一个 node_module 下面")]),a._v(" "),s("li",[a._v("与 package.json 声明的依赖基本保持一致")])]),a._v(" "),s("h3",{attrs:{id:"pnpm-原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#pnpm-原理"}},[a._v("#")]),a._v(" pnpm 原理")]),a._v(" "),s("p",[a._v("pnpm 使用软链接和硬链接来共同构建 node_modules 目录\n假设有两个包 a 和 b，a 依赖于 b，则安装依赖 a 时，pnpm 处理如下：\n"),s("img",{attrs:{src:n(537),alt:"pic"}})]),a._v(" "),s("ol",[s("li",[a._v("查询依赖关系，得到最终要安装的包： a 和 b")]),a._v(" "),s("li",[a._v("查看 a 和 b是否有缓存，如果没有，则下载到缓存中，否则进入下一步")]),a._v(" "),s("li",[a._v("创建 node_modules 目录，并对目录结构进行初始化")]),a._v(" "),s("li",[a._v("从缓存的对应包中使用硬链接放置文件到相应包代码目录中")]),a._v(" "),s("li",[a._v("使用符号链接，将每个包的直接依赖放置到自己的目录中，从而保证 a 的代码在执行时能读取直接依赖")]),a._v(" "),s("li",[a._v("新版本的 pnpm 为了解决读取间接依赖的问题，将所有的工程非直接依赖，使用符号链接加入到了 .pnpm/node_modules 中")]),a._v(" "),s("li",[a._v("在工程的 node_modules 目录中使用符号链接，放置直接依赖")])]),a._v(" "),s("h3",{attrs:{id:"pnpm-的使用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#pnpm-的使用"}},[a._v("#")]),a._v(" pnpm 的使用")]),a._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 安装 axios")]),a._v("\npnpm install axios\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 安装 axios 并将 axios 添加至 devDependencies")]),a._v("\npnpm install axios "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),s("span",{pre:!0,attrs:{class:"token constant"}},[a._v("D")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 安装 axios 并将 axios 添加至 dependencies")]),a._v("\npnpm install axios "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),s("span",{pre:!0,attrs:{class:"token constant"}},[a._v("S")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 更新axios")]),a._v("\npnpm update axios\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 通过 --filter来指定package")]),a._v("\npnpm install axios "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("--")]),a._v("filter "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("0.18")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 链接到另一项目，使用硬链接")]),a._v("\npnpm link "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),a._v("axios\n")])])]),s("p",[a._v("项目开发中，常用的开发命令如 run/start/test 等使用和 npm 使用相同")]),a._v(" "),s("h2",{attrs:{id:"包管理器总结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#包管理器总结"}},[a._v("#")]),a._v(" 包管理器总结")]),a._v(" "),s("h3",{attrs:{id:"演进小结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#演进小结"}},[a._v("#")]),a._v(" 演进小结")]),a._v(" "),s("ul",[s("li",[a._v("npm 1/2：包管理器的开始，处理 node 包，管理依赖")]),a._v(" "),s("li",[a._v("npm 3： 扁平化依赖结构，修复大量问题")]),a._v(" "),s("li",[a._v("yarn：更快速，解决包版本依赖问题，更好用")]),a._v(" "),s("li",[a._v("npm 5：引入 package-lock.json 文件，提升性能，吸收 yarn 优点")]),a._v(" "),s("li",[a._v("pnpm：快速安全，节省空间，自创依赖管理结构")])]),a._v(" "),s("h3",{attrs:{id:"包管理器的未来"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#包管理器的未来"}},[a._v("#")]),a._v(" 包管理器的未来")]),a._v(" "),s("ul",[s("li",[a._v("npm 7：支持 workspaces，可支持从单个顶级软件包中管理多个软件包。自动安装 peerDependencies")]),a._v(" "),s("li",[a._v("yarn 2：pnp 模式 - 取代 node_modules ，减少依赖的体积和加载时间，大幅提升速度，解决已有问题")]),a._v(" "),s("li",[a._v("pnpm：速度快，依赖管理出色，对 monorepo 支持良好，日趋成熟")])]),a._v(" "),s("p",[a._v("随着包管理器的发展，他们的功能越来越强大，性能提升，也解决了很多痛点，未来可以多去实践这些不同的工具，根据项目和实际需求确定我们所需的工具。")]),a._v(" "),s("h2",{attrs:{id:"参考资料"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#参考资料"}},[a._v("#")]),a._v(" 参考资料")]),a._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"https://juejin.cn/post/6844903489726840839#heading-1",target:"_blank",rel:"noopener noreferrer"}},[a._v("JavaScript 包管理的前世今生"),s("OutboundLink")],1)]),a._v(" "),s("li",[s("a",{attrs:{href:"https://juejin.cn/post/6844903910482657294#heading-12",target:"_blank",rel:"noopener noreferrer"}},[a._v("新一代 javascript 包管理工具：YARN 简介"),s("OutboundLink")],1)]),a._v(" "),s("li",[s("a",{attrs:{href:"https://juejin.cn/post/6932046455733485575#heading-3",target:"_blank",rel:"noopener noreferrer"}},[a._v("关于现代包管理器的深度思考"),s("OutboundLink")],1)]),a._v(" "),s("li",[s("a",{attrs:{href:"https://classic.yarnpkg.com/en/docs",target:"_blank",rel:"noopener noreferrer"}},[a._v("yarn 官方文档"),s("OutboundLink")],1)]),a._v(" "),s("li",[s("a",{attrs:{href:"https://pnpm.js.org/en/",target:"_blank",rel:"noopener noreferrer"}},[a._v("pnpm 官方文档"),s("OutboundLink")],1)]),a._v(" "),s("li",[s("a",{attrs:{href:"https://cloud.tencent.com/developer/article/1555982",target:"_blank",rel:"noopener noreferrer"}},[a._v("Conarli《npm install 原理分析》"),s("OutboundLink")],1)]),a._v(" "),s("li",[s("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/362228487",target:"_blank",rel:"noopener noreferrer"}},[a._v("为什么现代前端工程越来越离不开 Monorepo?"),s("OutboundLink")],1)]),a._v(" "),s("li",[s("a",{attrs:{href:"https://juejin.cn/post/6844903601563762702#heading-4",target:"_blank",rel:"noopener noreferrer"}},[a._v("为什么我从 npm 到 yarn 再到 npm?"),s("OutboundLink")],1)]),a._v(" "),s("li",[s("a",{attrs:{href:"https://ocavue.com/yarn-2-first-impression-zh/#plug-n-play",target:"_blank",rel:"noopener noreferrer"}},[a._v("Yarn 2使用体验"),s("OutboundLink")],1)]),a._v(" "),s("li",[s("a",{attrs:{href:"https://www.codenong.com/cs106973810/",target:"_blank",rel:"noopener noreferrer"}},[a._v("pnpm 的原理"),s("OutboundLink")],1)])])])}),[],!1,null,null,null);t.default=e.exports}}]);