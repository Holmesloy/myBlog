(window.webpackJsonp=window.webpackJsonp||[]).push([[48],{596:function(t,s,a){"use strict";a.r(s);var e=a(5),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"组件样式修改"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#组件样式修改"}},[t._v("#")]),t._v(" 组件样式修改")]),t._v(" "),a("p",[t._v("通常来说，vue 中每个页面的样式一般需要加上 scoped 属性，否则可能会造成全局样式污染。"),a("br"),t._v("\n而如果加上 scoped 属性，vue 会将每个类类名进行哈希，变得独一无二，所以加上 scoped 之后再更改"),a("br"),t._v("\n组件样式的话，是不会生效的。想要自定义修改样式，以 element-ui 为例，通常有以下方法。")]),t._v(" "),a("h3",{attrs:{id:"_1-全局样式表"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-全局样式表"}},[t._v("#")]),t._v(" 1. 全局样式表")]),t._v(" "),a("p",[t._v("以 SCSS 为例，新建 global.scss 文件，并在 main.js 中引入，一般目录为"),a("code",[t._v("/src/assets/style/global.scss")]),t._v("，"),a("br"),t._v("\n然后在 main.js 中引入："),a("code",[t._v('import "./assets/style/global.scss"')]),a("br"),t._v("\n在 global.scss 中写的样式，无论在哪一个 vue 页面中都会覆盖组件样式，通常用于想要固定修改组件的样式。")]),t._v(" "),a("h3",{attrs:{id:"_2-添加新-style-标签"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-添加新-style-标签"}},[t._v("#")]),t._v(" 2. 添加新 style 标签")]),t._v(" "),a("p",[t._v("在当前 vue 页面中，添加一对新的 style 标签，新的 style 标签中不要添加 scoped 属性。在此 style 中修改组件样式"),a("br"),t._v("\n可以生效，一般采用 scss 嵌套的方式保证唯一性从而避免污染全局的样式。")]),t._v(" "),a("h3",{attrs:{id:"_3-使用-deep-深度修改"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-使用-deep-深度修改"}},[t._v("#")]),t._v(" 3. 使用 /deep/ 深度修改")]),t._v(" "),a("p",[t._v("在需要修改的组件类名前，加上 "),a("code",[t._v("/deep/")]),t._v("，可以修改 scoped 属性中的样式")]),t._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".test /deep/ .el-dialog")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("  \n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("width")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 100%"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  \n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("  \n")])])]),a("p",[a("strong",[t._v(">>>、/deep/ 与 ::v-deep")])]),t._v(" "),a("ul",[a("li",[t._v("三者都是 deep 功能，只是使用场景不同")]),t._v(" "),a("li",[t._v("只有 css 中能使用 "),a("code",[t._v(">>>")])]),t._v(" "),a("li",[t._v("scss 等预处理器中可以使用 "),a("code",[t._v("/deep/")])]),t._v(" "),a("li",[t._v("vue-cli3 编译中"),a("code",[t._v("/deep/")]),t._v("会报错，所以使用"),a("code",[t._v("::v-deep")]),t._v("（双冒号）")])]),t._v(" "),a("h3",{attrs:{id:"_4-使用内联样式修改"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-使用内联样式修改"}},[t._v("#")]),t._v(" 4. 使用内联样式修改")]),t._v(" "),a("div",{staticClass:"language-html extra-class"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("el-button")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v(":style")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("selfStyle"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("按钮"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("el-button")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("  \n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("script")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token script"}},[a("span",{pre:!0,attrs:{class:"token language-javascript"}},[t._v("  \n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("  \n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("data")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("  \n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("  \n        selfStyle"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("  \n          color"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"white"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("  \n          marginTop"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"10px"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("  \n          backgroundColorA"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"cadeblue"')]),t._v("  \n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("  \n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("  \n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("  \n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("  \n")])]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("script")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("  \n")])])]),a("h3",{attrs:{id:"_5-custom-class"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-custom-class"}},[t._v("#")]),t._v(" 5. custom-class")]),t._v(" "),a("p",[t._v("饿了么组件库的一些组件，会提供一个自定义类名的属性，可以通过属性添加一个类名，然后修改组件样式。"),a("br"),t._v("\n缺点：不是所有组件都提供自定义类名的属性。")]),t._v(" "),a("h3",{attrs:{id:"总结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),a("ul",[a("li",[t._v("全局引入 css 文件的方式，适合对组件整体的修改，比如一些配色、间距大小等")]),t._v(" "),a("li",[t._v("第二种添加 style 的方式，实际上修改了全局的样式，所以可能会存在冲突，需要保证唯一性")]),t._v(" "),a("li",[t._v("第三种使用 /deep/ 的方式可以很方便地修改样式，但是不能解决所有样式，只对部分样式有效")]),t._v(" "),a("li",[t._v("第四种方式局限性较大，不推荐使用")]),t._v(" "),a("li",[t._v("所以较为推荐的是第二种、第三种和第五种，按照实际需要使用")])])])}),[],!1,null,null,null);s.default=n.exports}}]);